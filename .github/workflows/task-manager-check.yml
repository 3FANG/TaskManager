name: task-manager-check

on: 
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    # Подключаем docker образ для postgresql
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: task_manager_action
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      # Клонируем репозиторий
      - uses: actions/checkout@v3
      # Ставим Python нужной версии
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
           python-version: 3.10.x
      # Устанавливаем poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      # Устанавливаем зависимости
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      # Собираем файлы статики и загружаем миграции
      - name: Build project
        run: |
          source .venv/bin/activate
          python3 manage.py collectstatic --no-input
          python3 manage.py migrate
      # Запускаем тестирование и покрытие кода тестами
      - name: Test & publish code coverage
        uses: paambaati/codeclimate-action@v5
        env:
            SECRET_KEY: "1234"
            DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/task_manager_action
            CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: make test-coverage

      # Проверка линтера
      - name: Lint
        run: poetry run flake8 task_manager
